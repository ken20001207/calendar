{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction Timeline(props) {\n  function fillEvents(events) {\n    var time = new Date(\"2020/2/20 0:00:00\");\n    var filledEvents = [];\n    events.map(function (event) {\n      if (time < event.startTime) {\n        var n = _parseInt((event.startTime - time) / 3600000);\n\n        var count = 1;\n\n        while (n >= 0) {\n          if (n > 0) {\n            filledEvents.push({\n              startTime: time.setHours(time.getHours() + count - 1),\n              endTime: time.setHours(time.getHours() + count),\n              cal: null\n            });\n            console.log(time.setHours(time.getHours() + count - 1) + \" , \" + time.setHours(time.getHours() + count));\n          } else if (n == 0) {\n            filledEvents.push({\n              startTime: time.setHours(time.getHours() + count - 1),\n              endTime: event.startTime,\n              cal: null\n            });\n            console.log(time.setHours(time.getHours() + count - 1) + \" , \" + event.startTime);\n          }\n\n          count++;\n          n--;\n        }\n\n        filledEvents.push(event);\n        time = event.endTime;\n      } else {\n        filledEvents.push(event);\n        time = event.endTime;\n      }\n    });\n    return filledEvents;\n  }\n\n  return fillEvents(props.events).map(function (event) {\n    if (event.cal !== null) {\n      return __jsx(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, event.startTime.getHours(), \" :\", \" \", (event.startTime.getMinutes() < 10 ? \"0\" : \"\") + event.startTime.getMinutes())), __jsx(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(EventCard, {\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    } else return __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), __jsx(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(EventCard, {\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  });\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","Timeline","props","fillEvents","events","time","Date","filledEvents","map","event","startTime","n","count","push","setHours","getHours","endTime","cal","console","log","color","fontSize","getMinutes"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Timeline(props) {\r\n    function fillEvents(events) {\r\n        var time = new Date(\"2020/2/20 0:00:00\");\r\n        var filledEvents = [];\r\n        events.map(event => {\r\n            if (time < event.startTime) {\r\n                var n = parseInt((event.startTime - time) / 3600000);\r\n                var count = 1;\r\n                while (n >= 0) {\r\n                    if (n > 0) {\r\n                        filledEvents.push({\r\n                            startTime: time.setHours(\r\n                                time.getHours() + count - 1\r\n                            ),\r\n                            endTime: time.setHours(time.getHours() + count),\r\n                            cal: null\r\n                        });\r\n                        console.log(\r\n                            time.setHours(time.getHours() + count - 1) +\r\n                                \" , \" +\r\n                                time.setHours(time.getHours() + count)\r\n                        );\r\n                    } else if (n == 0) {\r\n                        filledEvents.push({\r\n                            startTime: time.setHours(\r\n                                time.getHours() + count - 1\r\n                            ),\r\n                            endTime: event.startTime,\r\n                            cal: null\r\n                        });\r\n                        console.log(\r\n                            time.setHours(time.getHours() + count - 1) +\r\n                                \" , \" +\r\n                                event.startTime\r\n                        );\r\n                    }\r\n                    count++;\r\n                    n--;\r\n                }\r\n                filledEvents.push(event);\r\n                time = event.endTime;\r\n            } else {\r\n                filledEvents.push(event);\r\n                time = event.endTime;\r\n            }\r\n        });\r\n        return filledEvents;\r\n    }\r\n\r\n    return fillEvents(props.events).map(event => {\r\n        if (event.cal !== null) {\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}>\r\n                        <p style={{ color: \"white\", fontSize: 8 }}>\r\n                            {event.startTime.getHours()} :{\" \"}\r\n                            {(event.startTime.getMinutes() < 10 ? \"0\" : \"\") +\r\n                                event.startTime.getMinutes()}\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        } else\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}></Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n    });\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}