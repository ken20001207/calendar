{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction Timeline(props) {\n  var style = {\n    color: \"white\",\n    fontSize: 8,\n    lineHeight: 4\n  };\n\n  function fillEvents(events) {\n    var time = 0;\n    var filledEvents = [];\n    events.map(function (event) {\n      if (time < event.startTime) {\n        filledEvents.push({\n          startTime: time,\n          endTime: event.startTime\n        });\n        filledEvents.push(event);\n        time = event.startTime;\n      } else {\n        filledEvents.push(event);\n      }\n    });\n    return filledEvents;\n  }\n\n  console.log(_JSON$stringify(fillEvents(props.events)));\n  return props.events.map(function (event) {\n    return __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, _parseInt(event.startTime / 60), \" : \", event.startTime % 60)), __jsx(Grid, {\n      item: true,\n      xs: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(EventCard, {\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  });\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","Timeline","props","style","color","fontSize","lineHeight","fillEvents","events","time","filledEvents","map","event","startTime","push","endTime","console","log"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAMC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE,CAFA;AAGVC,IAAAA,UAAU,EAAE;AAHF,GAAd;;AAMA,WAASC,UAAT,CAAoBC,MAApB,EAA4B;AACxB,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;AACAF,IAAAA,MAAM,CAACG,GAAP,CAAW,UAAAC,KAAK,EAAI;AAChB,UAAIH,IAAI,GAAGG,KAAK,CAACC,SAAjB,EAA4B;AACxBH,QAAAA,YAAY,CAACI,IAAb,CAAkB;AACdD,UAAAA,SAAS,EAAEJ,IADG;AAEdM,UAAAA,OAAO,EAAEH,KAAK,CAACC;AAFD,SAAlB;AAIAH,QAAAA,YAAY,CAACI,IAAb,CAAkBF,KAAlB;AACAH,QAAAA,IAAI,GAAGG,KAAK,CAACC,SAAb;AACH,OAPD,MAOO;AACHH,QAAAA,YAAY,CAACI,IAAb,CAAkBF,KAAlB;AACH;AACJ,KAXD;AAYA,WAAOF,YAAP;AACH;;AAEDM,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAeV,UAAU,CAACL,KAAK,CAACM,MAAP,CAAzB,CAAZ;AAEA,SAAON,KAAK,CAACM,MAAN,CAAaG,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACzB,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAET,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,UAASS,KAAK,CAACC,SAAN,GAAkB,EAA3B,CADL,SACwCD,KAAK,CAACC,SAAN,GAAkB,EAD1D,CADJ,CADJ,EAMI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADyB;AAAA,GAAtB,CAAP;AAYH;;AAED,eAAeX,QAAf","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Timeline(props) {\r\n    const style = {\r\n        color: \"white\",\r\n        fontSize: 8,\r\n        lineHeight: 4\r\n    };\r\n\r\n    function fillEvents(events) {\r\n        var time = 0;\r\n        var filledEvents = [];\r\n        events.map(event => {\r\n            if (time < event.startTime) {\r\n                filledEvents.push({\r\n                    startTime: time,\r\n                    endTime: event.startTime\r\n                });\r\n                filledEvents.push(event);\r\n                time = event.startTime;\r\n            } else {\r\n                filledEvents.push(event);\r\n            }\r\n        });\r\n        return filledEvents;\r\n    }\r\n\r\n    console.log(JSON.stringify(fillEvents(props.events)));\r\n\r\n    return props.events.map(event => (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={1}>\r\n                <p style={style}>\r\n                    {parseInt(event.startTime / 60)} : {event.startTime % 60}\r\n                </p>\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n                <EventCard event={event} />\r\n            </Grid>\r\n        </Grid>\r\n    ));\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}