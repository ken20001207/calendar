{"ast":null,"code":"import { generateUUID } from \"./utils/methods\";\nexport class Event {\n  constructor(JSONObject, isEmpty) {\n    this.startTime = new Date(JSONObject.startTime);\n    this.endTime = new Date(JSONObject.endTime);\n    this.duration = parseInt((this.endTime - this.startTime) / 60000);\n    this.location = JSONObject.location == undefined ? undefined : JSONObject.location;\n    this.description = JSONObject.description == undefined ? undefined : JSONObject.description;\n    this.id = JSONObject.id == undefined ? generateUUID() : JSONObject.id;\n    this.calendarTitle = JSONObject.calendarTitle == undefined ? undefined : JSONObject.calendarTitle;\n\n    if (!isEmpty) {\n      this.isEmpty = false;\n      this.title = JSONObject.title;\n      this.color = JSONObject.color;\n    } else this.isEmpty = true;\n  }\n\n  isAllDayEvent() {\n    return this.duration >= 1440;\n  }\n\n  isEmpty() {\n    return this.isEmpty;\n  }\n\n  getStartTimeSrting() {\n    return this.startTime.getHours() + \":\" + (this.startTime.getMinutes() < 10 ? \"0\" : \"\") + this.startTime.getMinutes();\n  }\n\n  getEndTimeSting() {\n    return this.endTime.getHours() + \":\" + (this.endTime.getMinutes() < 10 ? \"0\" : \"\") + this.endTime.getMinutes();\n  }\n\n  getDurationString() {\n    return this.getStartTimeSrting() + \" - \" + this.getEndTimeSting();\n  }\n\n}\nexport class Calendar {\n  constructor(JSONObject) {\n    this.title = JSONObject.title;\n    this.color = JSONObject.color;\n    this.events = JSONObject.events.map(event => {\n      event.calendarTitle = this.title;\n      return new Event(event);\n    });\n  }\n\n}\nexport class User {\n  constructor(JSONObject) {\n    this.username = JSONObject.username;\n    this.calendars = JSONObject.calendars.map(calendar => {\n      return new Calendar(calendar);\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}