{"ast":null,"code":"import EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { Event } from \"../classes\";\n\nfunction eventsbyDate(events, date) {\n  return events.filter(event => {\n    if (event instanceof Event) if (event.startTime instanceof Date) {\n      return true;\n    }\n    return false;\n  });\n}\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todayEvents: [],\n      filledEvents: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      todayEvents: nextProps.events,\n      filledEvents: fillEvents(nextProps.events)\n    };\n  }\n\n  render() {\n    return fillEvents(this.state.todayEvents).map(event => {\n      if (event instanceof Event) {}\n    });\n  }\n\n}\n\nfunction startOfDay(date) {\n  if (!date instanceof Date) {\n    console.error(\"傳入的時間不是合法的 Date 物件。\");\n    return null;\n  }\n\n  date = new Date(date);\n  var time = new Date();\n  time.setTime(date.getTime());\n  time.setHours(0, 0, 0);\n  return time;\n}\n\nfunction endOfDay(date) {\n  if (!date instanceof Date) {\n    console.error(\"傳入的時間不是合法的 Date 物件。\");\n    return null;\n  }\n\n  date = new Date(date);\n  var time = new Date();\n  time.setTime(date.getTime());\n  time.setHours(23, 59, 59);\n  return time;\n}\n\nfunction fillEvents(events) {\n  var filled = new Array();\n  var time = startOfDay(events[0].startTime);\n  events.map(event => {\n    var startTime = new Date(event.startTime);\n    var endTime = new Date(event.endTime);\n    filled.push(new Event({\n      startTime: time,\n      endTime: startTime\n    }, true));\n    filled.push(event);\n    time.setTime(endTime.getTime());\n  });\n  filled.push(new Event({\n    startTime: time,\n    endTime: endOfDay(events[0].startTime)\n  }, true));\n  return filled;\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","React","Event","eventsbyDate","events","date","filter","event","startTime","Date","Timeline","Component","constructor","props","state","todayEvents","filledEvents","getDerivedStateFromProps","nextProps","fillEvents","render","map","startOfDay","console","error","time","setTime","getTime","setHours","endOfDay","filled","Array","endTime","push"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { Event } from \"../classes\";\r\n\r\nfunction eventsbyDate(events, date) {\r\n    return events.filter(event => {\r\n        if (event instanceof Event)\r\n            if (event.startTime instanceof Date) {\r\n                return true;\r\n            }\r\n        return false;\r\n    });\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todayEvents: [],\r\n            filledEvents: []\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            todayEvents: nextProps.events,\r\n            filledEvents: fillEvents(nextProps.events)\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return fillEvents(this.state.todayEvents).map(event => {\r\n            if (event instanceof Event) {\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction startOfDay(date) {\r\n    if (!date instanceof Date) {\r\n        console.error(\"傳入的時間不是合法的 Date 物件。\");\r\n        return null;\r\n    }\r\n    date = new Date(date);\r\n    var time = new Date();\r\n    time.setTime(date.getTime());\r\n    time.setHours(0, 0, 0);\r\n    return time;\r\n}\r\n\r\nfunction endOfDay(date) {\r\n    if (!date instanceof Date) {\r\n        console.error(\"傳入的時間不是合法的 Date 物件。\");\r\n        return null;\r\n    }\r\n    date = new Date(date);\r\n    var time = new Date();\r\n    time.setTime(date.getTime());\r\n    time.setHours(23, 59, 59);\r\n    return time;\r\n}\r\n\r\nfunction fillEvents(events) {\r\n    var filled = new Array();\r\n    var time = startOfDay(events[0].startTime);\r\n    events.map(event => {\r\n        var startTime = new Date(event.startTime);\r\n        var endTime = new Date(event.endTime);\r\n        filled.push(new Event({ startTime: time, endTime: startTime }, true));\r\n        filled.push(event);\r\n        time.setTime(endTime.getTime());\r\n    });\r\n    filled.push(new Event({ startTime: time, endTime: endOfDay(events[0].startTime) }, true));\r\n    return filled;\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}