{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { Event } from \"../classes\";\n\nfunction eventsbyDate(events, date) {\n  return events.filter(event => {\n    if (event instanceof Event) if (event.startTime instanceof Date) {\n      return true;\n    }\n    return false;\n  });\n}\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todayEvents: [],\n      filledEvents: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      todayEvents: nextProps.events,\n      filledEvents: fillEvents(nextProps.events)\n    };\n  }\n\n  render() {\n    return fillEvents(this.state.todayEvents).map(event => {\n      if (event instanceof Event) if (!event.isEmpty) {\n        return __jsx(Grid, {\n          container: true,\n          spacing: 1,\n          key: event.startTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, __jsx(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          style: {\n            color: \"white\",\n            fontSize: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, event.startTime.getHours(), \":\", event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes())), __jsx(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(EventCard, {\n          key: event.startTime,\n          event: event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        })));\n      } else {\n        return __jsx(Grid, {\n          container: true,\n          spacing: 1,\n          key: event.startTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, __jsx(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), __jsx(Grid, {\n          item: true,\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, __jsx(EventCard, {\n          key: event.startTime,\n          event: event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })));\n      }\n    });\n  }\n\n}\n\nfunction fillEvents(events) {\n  var time = new Date(events[0]).setHours(0, 0, 0);\n  var filledEvents = [];\n  events.map(event => {\n    console.log(time.toLocaleString() + \" \" + event.startTime.toLocaleString());\n\n    if (time < event.startTime) {\n      filledEvents.push(new Event({\n        startTime: time,\n        endTime: event.startTime\n      }, true));\n      filledEvents.push(event);\n      time = event.endTime;\n    } else {\n      filledEvents.push(event);\n      time = event.endTime;\n    }\n  });\n  filledEvents.push(new Event({\n    startTime: time,\n    endTime: new Date(\"2020/2/23 23:59:59\")\n  }, true));\n  return filledEvents;\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","React","Event","eventsbyDate","events","date","filter","event","startTime","Date","Timeline","Component","constructor","props","state","todayEvents","filledEvents","getDerivedStateFromProps","nextProps","fillEvents","render","map","isEmpty","color","fontSize","getHours","getMinutes","time","setHours","console","log","toLocaleString","push","endTime"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { Event } from \"../classes\";\r\n\r\nfunction eventsbyDate(events, date) {\r\n    return events.filter(event => {\r\n        if (event instanceof Event)\r\n            if (event.startTime instanceof Date) {\r\n                return true;\r\n            }\r\n        return false;\r\n    });\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todayEvents: [],\r\n            filledEvents: []\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            todayEvents: nextProps.events,\r\n            filledEvents: fillEvents(nextProps.events)\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return fillEvents(this.state.todayEvents).map(event => {\r\n            if (event instanceof Event)\r\n                if (!event.isEmpty) {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}>\r\n                                <p style={{ color: \"white\", fontSize: 8 }}>\r\n                                    {event.startTime.getHours()}:\r\n                                    {event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes()}\r\n                                </p>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}></Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                }\r\n        });\r\n    }\r\n}\r\n\r\nfunction fillEvents(events) {\r\n    var time = new Date(events[0]).setHours(0, 0, 0);\r\n    var filledEvents = [];\r\n    events.map(event => {\r\n        console.log(time.toLocaleString() + \" \" + event.startTime.toLocaleString());\r\n        if (time < event.startTime) {\r\n            filledEvents.push(new Event({ startTime: time, endTime: event.startTime }, true));\r\n            filledEvents.push(event);\r\n            time = event.endTime;\r\n        } else {\r\n            filledEvents.push(event);\r\n            time = event.endTime;\r\n        }\r\n    });\r\n    filledEvents.push(new Event({ startTime: time, endTime: new Date(\"2020/2/23 23:59:59\") }, true));\r\n    return filledEvents;\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}