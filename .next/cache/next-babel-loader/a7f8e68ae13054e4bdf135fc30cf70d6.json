{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\n\nfunction Timeline(props) {\n  function getNextEvent(events, time) {\n    return new _Promise(function (resolve, reject) {\n      events.map(function (event) {\n        if (event.startTime > time) {\n          resolve({\n            cal: null,\n            startTime: time,\n            endTime: event.startTime\n          });\n        } else {\n          resolve(event);\n        }\n      });\n    });\n  }\n\n  return props.events.map(function (event) {\n    return __jsx(EventCard, {\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  });\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Timeline","props","getNextEvent","events","time","resolve","reject","map","event","startTime","cal","endTime"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAChC,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCH,MAAAA,MAAM,CAACI,GAAP,CAAW,UAAAC,KAAK,EAAI;AAChB,YAAIA,KAAK,CAACC,SAAN,GAAkBL,IAAtB,EAA4B;AACxBC,UAAAA,OAAO,CAAC;AACJK,YAAAA,GAAG,EAAE,IADD;AAEJD,YAAAA,SAAS,EAAEL,IAFP;AAGJO,YAAAA,OAAO,EAAEH,KAAK,CAACC;AAHX,WAAD,CAAP;AAKH,SAND,MAMO;AACHJ,UAAAA,OAAO,CAACG,KAAD,CAAP;AACH;AACJ,OAVD;AAWH,KAZM,CAAP;AAaH;;AAED,SAAOP,KAAK,CAACE,MAAN,CAAaI,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAAI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAtB,CAAP;AACH;;AAED,eAAeR,QAAf","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\n\r\nfunction Timeline(props) {\r\n    function getNextEvent(events, time) {\r\n        return new Promise((resolve, reject) => {\r\n            events.map(event => {\r\n                if (event.startTime > time) {\r\n                    resolve({\r\n                        cal: null,\r\n                        startTime: time,\r\n                        endTime: event.startTime\r\n                    });\r\n                } else {\r\n                    resolve(event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return props.events.map(event => <EventCard event={event} />);\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}