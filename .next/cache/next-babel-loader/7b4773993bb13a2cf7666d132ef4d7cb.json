{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction a() {\n  var n = _parseInt((event.startTime - time) / 3600000);\n\n  var count = 1;\n\n  for (; n >= 0; count++, n--) {\n    if (n > 0) {\n      var h = time.getHours() + count - 1;\n      filledEvents.push({\n        startTime: time.setHours(h),\n        endTime: time.setHours(h + 1),\n        cal: null\n      });\n    } else if (n == 0) {\n      filledEvents.push({\n        startTime: time.setHours(time.getHours() + count - 1),\n        endTime: event.startTime,\n        cal: null\n      });\n    }\n  }\n}\n\nfunction Timeline(props) {\n  function fillEvents(events) {\n    var time = new Date(\"2020/2/20 0:00:00\");\n    var filledEvents = [];\n    events.map(function (event) {\n      if (time < event.startTime) {\n        filledEvents.push(event);\n        time = event.endTime;\n      } else {\n        filledEvents.push(event);\n        time = event.endTime;\n      }\n    });\n    return filledEvents;\n  }\n\n  return fillEvents(props.events).map(function (event) {\n    if (event.cal !== null) {\n      return __jsx(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, event.startTime.getHours(), \" :\", \" \", (event.startTime.getMinutes() < 10 ? \"0\" : \"\") + event.startTime.getMinutes())), __jsx(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(EventCard, {\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    } else return __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(EventCard, {\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  });\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","a","n","event","startTime","time","count","h","getHours","filledEvents","push","setHours","endTime","cal","Timeline","props","fillEvents","events","Date","map","color","fontSize","getMinutes"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction a() {\r\n    var n = parseInt((event.startTime - time) / 3600000);\r\n    var count = 1;\r\n    for (; n >= 0; count++, n--) {\r\n        if (n > 0) {\r\n            var h = time.getHours() + count - 1;\r\n            filledEvents.push({\r\n                startTime: time.setHours(h),\r\n                endTime: time.setHours(h + 1),\r\n                cal: null\r\n            });\r\n        } else if (n == 0) {\r\n            filledEvents.push({\r\n                startTime: time.setHours(time.getHours() + count - 1),\r\n                endTime: event.startTime,\r\n                cal: null\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction Timeline(props) {\r\n    function fillEvents(events) {\r\n        var time = new Date(\"2020/2/20 0:00:00\");\r\n        var filledEvents = [];\r\n        events.map(event => {\r\n            if (time < event.startTime) {\r\n                filledEvents.push(event);\r\n                time = event.endTime;\r\n            } else {\r\n                filledEvents.push(event);\r\n                time = event.endTime;\r\n            }\r\n        });\r\n        return filledEvents;\r\n    }\r\n\r\n    return fillEvents(props.events).map(event => {\r\n        if (event.cal !== null) {\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}>\r\n                        <p style={{ color: \"white\", fontSize: 8 }}>\r\n                            {event.startTime.getHours()} :{\" \"}\r\n                            {(event.startTime.getMinutes() < 10 ? \"0\" : \"\") + event.startTime.getMinutes()}\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        } else\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}></Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n    });\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}