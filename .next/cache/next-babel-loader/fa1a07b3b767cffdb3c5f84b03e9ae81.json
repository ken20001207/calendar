{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction SplitEmptySection(start, end) {\n  return new Promise(resolve => {\n    console.log(\"開始分段 \" + start.getHours() + \":\" + start.getMinutes() + \" 到 \" + end.getHours() + \":\" + end.getMinutes());\n\n    if (start.getHours() == end.getHours()) {\n      resolve(new Array(1).fill({\n        startTime: start,\n        endTime: end,\n        cal: null\n      }));\n    } else if (start.getMinutes() + 1 == end.getMinutes()) {\n      var arr = new Array(2);\n      arr[0] = {\n        startTime: start,\n        endTime: new Date(start).setHours(start.getHours() + 1, 0),\n        cal: null\n      };\n      arr[1] = {\n        startTime: new Date(start).setHours(start.getHours() + 1, 0),\n        endTime: end,\n        cal: null\n      };\n      resolve(arr);\n    } else {\n      var arr = new Array(end.getHours() - start.getHours() + 1);\n      arr[0] = {\n        startTime: start,\n        endTime: new Date(start).setHours(start.getHours() + 1, 0),\n        cal: null\n      };\n      var pointer = 1;\n\n      while (pointer < end.getHours() - start.getHours()) {\n        arr[pointer++] = {\n          startTime: new Date(start).setHours(start.getHours() + pointer, 0),\n          endTime: new Date(start).setHours(start.getHours() + pointer + 1, 0),\n          cal: null\n        };\n      }\n\n      arr[end.getHours() - start.getHours()] = {\n        startTime: new Date(end).setMinutes(0),\n        endTime: end,\n        cal: null\n      };\n      resolve(arr);\n    }\n  });\n}\n\nfunction Timeline(props) {\n  function fillEvents(events) {\n    var time = new Date(\"2020/2/20 0:00:00\");\n    var filledEvents = [];\n    events.map(async event => {\n      if (time < event.startTime) {\n        new Promise(async resolve => {\n          await SplitEmptySection(time, event.startTime).map(event => {\n            console.log(new Date(event.startTime).toLocaleString() + \" 到 \" + new Date(event.endTime).toLocaleString());\n            resolve(filledEvents.push(event));\n          });\n        }).then(() => {\n          new Promise(resolve => {\n            filledEvents.push(event);\n            resolve(time.setTime(event.endTime));\n          });\n        });\n      } else {\n        filledEvents.push(event);\n        time = event.endTime;\n      }\n    });\n    filledEvents.push({\n      startTime: time,\n      endTime: new Date(\"2020/2/20 24:00:00\"),\n      cal: null\n    });\n    return filledEvents;\n  }\n\n  return fillEvents(props.events).map(event => {\n    if (event.cal !== null) {\n      return __jsx(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, event.startTime.getHours(), \":\", (event.startTime.getMinutes() < 10 ? \"0\" : \"\") + event.startTime.getMinutes())), __jsx(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(EventCard, {\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    } else return __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), __jsx(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(EventCard, {\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  });\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","SplitEmptySection","start","end","Promise","resolve","console","log","getHours","getMinutes","Array","fill","startTime","endTime","cal","arr","Date","setHours","pointer","setMinutes","Timeline","props","fillEvents","events","time","filledEvents","map","event","toLocaleString","push","then","setTime","color","fontSize"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction SplitEmptySection(start, end) {\r\n    return new Promise(resolve => {\r\n        console.log(\r\n            \"開始分段 \" + start.getHours() + \":\" + start.getMinutes() + \" 到 \" + end.getHours() + \":\" + end.getMinutes()\r\n        );\r\n\r\n        if (start.getHours() == end.getHours()) {\r\n            resolve(\r\n                new Array(1).fill({\r\n                    startTime: start,\r\n                    endTime: end,\r\n                    cal: null\r\n                })\r\n            );\r\n        } else if (start.getMinutes() + 1 == end.getMinutes()) {\r\n            var arr = new Array(2);\r\n            arr[0] = {\r\n                startTime: start,\r\n                endTime: new Date(start).setHours(start.getHours() + 1, 0),\r\n                cal: null\r\n            };\r\n            arr[1] = {\r\n                startTime: new Date(start).setHours(start.getHours() + 1, 0),\r\n                endTime: end,\r\n                cal: null\r\n            };\r\n            resolve(arr);\r\n        } else {\r\n            var arr = new Array(end.getHours() - start.getHours() + 1);\r\n            arr[0] = {\r\n                startTime: start,\r\n                endTime: new Date(start).setHours(start.getHours() + 1, 0),\r\n                cal: null\r\n            };\r\n            var pointer = 1;\r\n            while (pointer < end.getHours() - start.getHours()) {\r\n                arr[pointer++] = {\r\n                    startTime: new Date(start).setHours(start.getHours() + pointer, 0),\r\n                    endTime: new Date(start).setHours(start.getHours() + pointer + 1, 0),\r\n                    cal: null\r\n                };\r\n            }\r\n            arr[end.getHours() - start.getHours()] = {\r\n                startTime: new Date(end).setMinutes(0),\r\n                endTime: end,\r\n                cal: null\r\n            };\r\n            resolve(arr);\r\n        }\r\n    });\r\n}\r\n\r\nfunction Timeline(props) {\r\n    function fillEvents(events) {\r\n        var time = new Date(\"2020/2/20 0:00:00\");\r\n        var filledEvents = [];\r\n        events.map(async event => {\r\n            if (time < event.startTime) {\r\n                new Promise(async resolve => {\r\n                    await SplitEmptySection(time, event.startTime).map(event => {\r\n                        console.log(\r\n                            new Date(event.startTime).toLocaleString() +\r\n                                \" 到 \" +\r\n                                new Date(event.endTime).toLocaleString()\r\n                        );\r\n                        resolve(filledEvents.push(event));\r\n                    });\r\n                }).then(() => {\r\n                    new Promise(resolve => {\r\n                        filledEvents.push(event);\r\n                        resolve(time.setTime(event.endTime));\r\n                    });\r\n                });\r\n            } else {\r\n                filledEvents.push(event);\r\n                time = event.endTime;\r\n            }\r\n        });\r\n        filledEvents.push({\r\n            startTime: time,\r\n            endTime: new Date(\"2020/2/20 24:00:00\"),\r\n            cal: null\r\n        });\r\n        return filledEvents;\r\n    }\r\n\r\n    return fillEvents(props.events).map(event => {\r\n        if (event.cal !== null) {\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}>\r\n                        <p style={{ color: \"white\", fontSize: 8 }}>\r\n                            {event.startTime.getHours()}:\r\n                            {(event.startTime.getMinutes() < 10 ? \"0\" : \"\") + event.startTime.getMinutes()}\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        } else\r\n            return (\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={2}></Grid>\r\n                    <Grid item xs={10}>\r\n                        <EventCard event={event} />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n    });\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}