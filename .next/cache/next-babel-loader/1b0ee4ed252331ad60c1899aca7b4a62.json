{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\DayView.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Event } from \"../classes\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventCard from \"./eventCard\";\n\nvar DayView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DayView, _React$Component);\n\n  function DayView(props) {\n    var _this;\n\n    _classCallCheck(this, DayView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DayView).call(this, props));\n    _this.state = {\n      events: [new Event({\n        startTime: \"2020-02-22T16:00:00.922Z\",\n        endTime: \"2020-02-23T02:00:27.922Z\",\n        duration: 600,\n        startTimeSrting: \"0:0\",\n        endTimeSting: \"10:0\",\n        durationString: \"0:0 - 10:0\",\n        isEmpty: true\n      }), new Event({\n        startTime: \"2020-02-23T02:00:27.922Z\",\n        endTime: \"2020-02-23T03:00:27.922Z\",\n        duration: 60,\n        startTimeSrting: \"10:0\",\n        endTimeSting: \"11:0\",\n        durationString: \"10:0 - 11:0\",\n        isEmpty: false,\n        title: \"預設事項1\",\n        color: [\"#fd3721\", \"#b721ff\"]\n      }), new Event({\n        startTime: \"2020-02-23T03:00:27.922Z\",\n        endTime: \"2020-02-23T05:00:27.922Z\",\n        duration: 120,\n        startTimeSrting: \"11:0\",\n        endTimeSting: \"13:0\",\n        durationString: \"11:0 - 13:0\",\n        isEmpty: true\n      }), new Event({\n        startTime: \"2020-02-23T05:00:27.922Z\",\n        endTime: \"2020-02-23T06:00:27.922Z\",\n        duration: 60,\n        startTimeSrting: \"13:0\",\n        endTimeSting: \"14:0\",\n        durationString: \"13:0 - 14:0\",\n        isEmpty: false,\n        title: \"預設事項2\",\n        color: [\"#fd3721\", \"#b721ff\"]\n      }), new Event({\n        startTime: \"2020-02-23T06:00:27.922Z\",\n        endTime: \"2020-02-23T08:00:27.922Z\",\n        duration: 120,\n        startTimeSrting: \"14:0\",\n        endTimeSting: \"16:0\",\n        durationString: \"14:0 - 16:0\",\n        isEmpty: true\n      }), new Event({\n        startTime: \"2020-02-23T08:00:27.922Z\",\n        endTime: \"2020-02-23T09:00:27.922Z\",\n        duration: 60,\n        startTimeSrting: \"16:0\",\n        endTimeSting: \"17:0\",\n        durationString: \"16:0 - 17:0\",\n        isEmpty: false,\n        title: \"預設事項3\",\n        color: [\"#fd3721\", \"#b721ff\"]\n      }), new Event({\n        startTime: \"2020-02-23T09:00:27.922Z\",\n        endTime: \"2020-02-23T15:00:59.922Z\",\n        duration: 360,\n        startTimeSrting: \"17:0\",\n        endTimeSting: \"23:0\",\n        durationString: \"17:0 - 23:0\",\n        isEmpty: true\n      })]\n    };\n    return _this;\n  }\n\n  _createClass(DayView, [{\n    key: \"render\",\n    value: function render() {\n      this.state.events.map(function (event) {\n        if (event instanceof Event) {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, event.getStartTimeSrting())), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          })));\n        } else {\n          console.error(\"渲染事件列表時接收到一個不符合規範的 event 物件。\");\n        }\n      });\n    }\n  }]);\n\n  return DayView;\n}(React.Component);\n\nexport default DayView;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/DayView.js"],"names":["React","Event","Grid","EventCard","DayView","props","state","events","startTime","endTime","duration","startTimeSrting","endTimeSting","durationString","isEmpty","title","color","map","event","fontSize","getStartTimeSrting","console","error","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CACJ,IAAIN,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,GAHJ;AAINC,QAAAA,eAAe,EAAE,KAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,YANV;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAV,CADI,EAUJ,IAAIb,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,EAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE,KAPH;AAQNC,QAAAA,KAAK,EAAE,OARD;AASNC,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ;AATD,OAAV,CAVI,EAqBJ,IAAIf,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,GAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAV,CArBI,EA8BJ,IAAIb,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,EAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE,KAPH;AAQNC,QAAAA,KAAK,EAAE,OARD;AASNC,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ;AATD,OAAV,CA9BI,EAyCJ,IAAIf,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,GAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAV,CAzCI,EAkDJ,IAAIb,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,EAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE,KAPH;AAQNC,QAAAA,KAAK,EAAE,OARD;AASNC,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ;AATD,OAAV,CAlDI,EA6DJ,IAAIf,KAAJ,CAAU;AACNO,QAAAA,SAAS,EAAE,0BADL;AAENC,QAAAA,OAAO,EAAE,0BAFH;AAGNC,QAAAA,QAAQ,EAAE,GAHJ;AAINC,QAAAA,eAAe,EAAE,MAJX;AAKNC,QAAAA,YAAY,EAAE,MALR;AAMNC,QAAAA,cAAc,EAAE,aANV;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAV,CA7DI;AADC,KAAb;AAFe;AA2ElB;;;;6BAEQ;AACL,WAAKR,KAAL,CAAWC,MAAX,CAAkBU,GAAlB,CAAsB,UAAAC,KAAK,EAAI;AAC3B,YAAIA,KAAK,YAAYjB,KAArB,EAA4B;AACxB,iBACI,MAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,GAAG,EAAEiB,KAAK,CAACH,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBG,cAAAA,QAAQ,EAAE;AAA5B,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4CD,KAAK,CAACE,kBAAN,EAA5C,CADJ,CADJ,EAII,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,SAAD;AAAW,YAAA,GAAG,EAAEF,KAAK,CAACV,SAAtB;AAAiC,YAAA,KAAK,EAAEU,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJJ,CADJ;AAUH,SAXD,MAWO;AACHG,UAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd;AACH;AACJ,OAfD;AAgBH;;;;EA/FiBtB,KAAK,CAACuB,S;;AAkG5B,eAAenB,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Event } from \"../classes\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EventCard from \"./eventCard\";\r\n\r\nclass DayView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [\r\n                new Event({\r\n                    startTime: \"2020-02-22T16:00:00.922Z\",\r\n                    endTime: \"2020-02-23T02:00:27.922Z\",\r\n                    duration: 600,\r\n                    startTimeSrting: \"0:0\",\r\n                    endTimeSting: \"10:0\",\r\n                    durationString: \"0:0 - 10:0\",\r\n                    isEmpty: true\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T02:00:27.922Z\",\r\n                    endTime: \"2020-02-23T03:00:27.922Z\",\r\n                    duration: 60,\r\n                    startTimeSrting: \"10:0\",\r\n                    endTimeSting: \"11:0\",\r\n                    durationString: \"10:0 - 11:0\",\r\n                    isEmpty: false,\r\n                    title: \"預設事項1\",\r\n                    color: [\"#fd3721\", \"#b721ff\"]\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T03:00:27.922Z\",\r\n                    endTime: \"2020-02-23T05:00:27.922Z\",\r\n                    duration: 120,\r\n                    startTimeSrting: \"11:0\",\r\n                    endTimeSting: \"13:0\",\r\n                    durationString: \"11:0 - 13:0\",\r\n                    isEmpty: true\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T05:00:27.922Z\",\r\n                    endTime: \"2020-02-23T06:00:27.922Z\",\r\n                    duration: 60,\r\n                    startTimeSrting: \"13:0\",\r\n                    endTimeSting: \"14:0\",\r\n                    durationString: \"13:0 - 14:0\",\r\n                    isEmpty: false,\r\n                    title: \"預設事項2\",\r\n                    color: [\"#fd3721\", \"#b721ff\"]\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T06:00:27.922Z\",\r\n                    endTime: \"2020-02-23T08:00:27.922Z\",\r\n                    duration: 120,\r\n                    startTimeSrting: \"14:0\",\r\n                    endTimeSting: \"16:0\",\r\n                    durationString: \"14:0 - 16:0\",\r\n                    isEmpty: true\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T08:00:27.922Z\",\r\n                    endTime: \"2020-02-23T09:00:27.922Z\",\r\n                    duration: 60,\r\n                    startTimeSrting: \"16:0\",\r\n                    endTimeSting: \"17:0\",\r\n                    durationString: \"16:0 - 17:0\",\r\n                    isEmpty: false,\r\n                    title: \"預設事項3\",\r\n                    color: [\"#fd3721\", \"#b721ff\"]\r\n                }),\r\n                new Event({\r\n                    startTime: \"2020-02-23T09:00:27.922Z\",\r\n                    endTime: \"2020-02-23T15:00:59.922Z\",\r\n                    duration: 360,\r\n                    startTimeSrting: \"17:0\",\r\n                    endTimeSting: \"23:0\",\r\n                    durationString: \"17:0 - 23:0\",\r\n                    isEmpty: true\r\n                })\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        this.state.events.map(event => {\r\n            if (event instanceof Event) {\r\n                return (\r\n                    <Grid container spacing={1} key={event.title}>\r\n                        <Grid item xs={2}>\r\n                            <p style={{ color: \"white\", fontSize: 8 }}>{event.getStartTimeSrting()}</p>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <EventCard key={event.startTime} event={event} />\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n            } else {\r\n                console.error(\"渲染事件列表時接收到一個不符合規範的 event 物件。\");\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default DayView;\r\n"]},"metadata":{},"sourceType":"module"}