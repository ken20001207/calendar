{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Event } from \"../classes\";\n\nfunction fillEvents(events) {\n  var time = new Date().setHours(0, 0, 0);\n  var filledEvents = [];\n  events.map(function (event) {\n    if (time < event.startTime) {\n      filledEvents.push(new Event({\n        startTime: time,\n        endTime: event.startTime\n      }, true));\n      filledEvents.push(event);\n      time = event.endTime;\n    } else {\n      filledEvents.push(event);\n      time = event.endTime;\n    }\n  });\n  filledEvents.push(new Event({\n    startTime: time,\n    endTime: new Date(\"2020/2/23 23:59:59\")\n  }, true));\n  return filledEvents;\n}\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  function Timeline() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timeline)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"todayEvents\", props.events.filter(function (event) {\n      if (event.startTime instanceof Date) {\n        return event.startTime.getFullYear() === 2020 && event.startTime.getMonth() + 1 == 2 && event.startTime.getDate() == 23;\n      } else return false;\n    }));\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return fillEvents(todayEvents).map(function (event) {\n        if (!event.isEmpty) {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, event.startTime.getHours(), \":\", event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes())), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })));\n        } else {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          })));\n        }\n      });\n    }\n  }]);\n\n  return Timeline;\n}(React.Component);\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["React","EventCard","Grid","Event","fillEvents","events","time","Date","setHours","filledEvents","map","event","startTime","push","endTime","Timeline","props","filter","getFullYear","getMonth","getDate","todayEvents","isEmpty","color","fontSize","getHours","getMinutes","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Event } from \"../classes\";\r\n\r\nfunction fillEvents(events) {\r\n    var time = new Date().setHours(0, 0, 0);\r\n    var filledEvents = [];\r\n    events.map(event => {\r\n        if (time < event.startTime) {\r\n            filledEvents.push(new Event({ startTime: time, endTime: event.startTime }, true));\r\n            filledEvents.push(event);\r\n            time = event.endTime;\r\n        } else {\r\n            filledEvents.push(event);\r\n            time = event.endTime;\r\n        }\r\n    });\r\n    filledEvents.push(new Event({ startTime: time, endTime: new Date(\"2020/2/23 23:59:59\") }, true));\r\n    return filledEvents;\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    todayEvents = props.events.filter(event => {\r\n        if (event.startTime instanceof Date) {\r\n            return (\r\n                event.startTime.getFullYear() === 2020 &&\r\n                event.startTime.getMonth() + 1 == 2 &&\r\n                event.startTime.getDate() == 23\r\n            );\r\n        } else return false;\r\n    });\r\n\r\n    render() {\r\n        return fillEvents(todayEvents).map(event => {\r\n            if (!event.isEmpty) {\r\n                return (\r\n                    <Grid container spacing={1} key={event.startTime}>\r\n                        <Grid item xs={2}>\r\n                            <p style={{ color: \"white\", fontSize: 8 }}>\r\n                                {event.startTime.getHours()}:\r\n                                {event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes()}\r\n                            </p>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <EventCard key={event.startTime} event={event} />\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Grid container spacing={1} key={event.startTime}>\r\n                        <Grid item xs={2}></Grid>\r\n                        <Grid item xs={10}>\r\n                            <EventCard key={event.startTime} event={event} />\r\n                        </Grid>\r\n                    </Grid>\r\n                );\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}