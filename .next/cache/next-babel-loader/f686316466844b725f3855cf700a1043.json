{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { Event } from \"../classes\";\n\nfunction eventsbyDate(events, date) {\n  return events.filter(event => {\n    if (event instanceof Event) if (event.startTime instanceof Date) {\n      return true;\n    }\n    return false;\n  });\n}\n\nclass Timeline extends React.Component {\n  render() {\n    return this.props.events.map(event => {\n      if (event instanceof Event) {\n        console.log(event);\n\n        if (!event.isEmpty) {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, event.startTime.getHours(), \":\", event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes())), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          })));\n        } else {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          })));\n        }\n      }\n    });\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","React","Event","eventsbyDate","events","date","filter","event","startTime","Date","Timeline","Component","render","props","map","console","log","isEmpty","color","fontSize","getHours","getMinutes"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAChC,SAAOD,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAI;AAC1B,QAAIA,KAAK,YAAYL,KAArB,EACI,IAAIK,KAAK,CAACC,SAAN,YAA2BC,IAA/B,EAAqC;AACjC,aAAO,IAAP;AACH;AACL,WAAO,KAAP;AACH,GANM,CAAP;AAOH;;AAED,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACnCC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKC,KAAL,CAAWT,MAAX,CAAkBU,GAAlB,CAAsBP,KAAK,IAAI;AAClC,UAAIA,KAAK,YAAYL,KAArB,EAA4B;AACxBa,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,YAAI,CAACA,KAAK,CAACU,OAAX,EAAoB;AAChB,iBACI,MAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,GAAG,EAAEV,KAAK,CAACC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,KAAK,EAAE;AAAEU,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,QAAQ,EAAE;AAA5B,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKZ,KAAK,CAACC,SAAN,CAAgBY,QAAhB,EADL,OAEKb,KAAK,CAACC,SAAN,CAAgBa,UAAhB,KAA+B,EAA/B,GAAoC,GAApC,GAA0C,KAAKd,KAAK,CAACC,SAAN,CAAgBa,UAAhB,EAFpD,CADJ,CADJ,EAOI,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,SAAD;AAAW,YAAA,GAAG,EAAEd,KAAK,CAACC,SAAtB;AAAiC,YAAA,KAAK,EAAED,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAPJ,CADJ;AAaH,SAdD,MAcO;AACH,iBACI,MAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,GAAG,EAAEA,KAAK,CAACC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,MAAC,SAAD;AAAW,YAAA,GAAG,EAAED,KAAK,CAACC,SAAtB;AAAiC,YAAA,KAAK,EAAED,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,CADJ;AAQH;AACJ;AACJ,KA5BM,CAAP;AA6BH;;AA/BkC;;AAkCvC,eAAeG,QAAf","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { Event } from \"../classes\";\r\n\r\nfunction eventsbyDate(events, date) {\r\n    return events.filter(event => {\r\n        if (event instanceof Event)\r\n            if (event.startTime instanceof Date) {\r\n                return true;\r\n            }\r\n        return false;\r\n    });\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    render() {\r\n        return this.props.events.map(event => {\r\n            if (event instanceof Event) {\r\n                console.log(event);\r\n                if (!event.isEmpty) {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}>\r\n                                <p style={{ color: \"white\", fontSize: 8 }}>\r\n                                    {event.startTime.getHours()}:\r\n                                    {event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes()}\r\n                                </p>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}></Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}