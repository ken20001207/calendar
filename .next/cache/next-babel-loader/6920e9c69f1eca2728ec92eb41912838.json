{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Container from \"@material-ui/core/container\";\nimport EventCard from \"../comps/eventCard\";\nimport { Event } from \"../classes\";\nimport TextField from \"@material-ui/core/TextField\";\n/** Parse .ics string into event array */\n\nfunction toEventArray(lines) {\n  return new _Promise(function (resolve) {\n    var events = [];\n    var tempEvent = {\n      cal: \"重要事項\"\n    };\n    var reading = false;\n\n    for (var line = 0; line < lines.length; line++) {\n      if (lines[line].includes(\"BEGIN\") && lines[line].includes(\"VEVENT\")) {\n        reading = true;\n      } else if (lines[line].includes(\"END\") && lines[line].includes(\"VEVENT\")) {\n        if (tempEvent.title != undefined && tempEvent.cal != undefined && tempEvent.startTime != undefined && tempEvent.endTime != undefined) {\n          events.push(new Event({\n            title: tempEvent.title,\n            startTime: tempEvent.startTime,\n            endTime: tempEvent.endTime,\n            color: [\"#FFAF3A\", \"#8E5800\"]\n          }));\n        }\n\n        reading = false;\n      }\n\n      if (reading) {\n        if (lines[line].includes(\"DTSTART\")) {\n          tempEvent.startTime = calenDate(lines[line].split(\":\")[1]);\n        } else if (lines[line].includes(\"DTEND\")) {\n          tempEvent.endTime = calenDate(lines[line].split(\":\")[1]);\n        } else if (lines[line].split(\":\")[0] == \"SUMMARY\") {\n          tempEvent.title = lines[line].split(\":\")[1];\n        } else if (lines[line].split(\":\")[0] == \"LOCATION\") {\n          tempEvent.location = lines[line].split(\":\")[1];\n        } else if (lines[line].split(\":\")[0] == \"DESCRIPTION\") {\n          tempEvent.description = lines[line].split(\":\")[1];\n        }\n      }\n    }\n\n    resolve(events);\n  });\n}\n/** Parse string of ics date format into date object */\n\n\nfunction calenDate(icalStr) {\n  var strYear = icalStr.substr(0, 4);\n  var strMonth = _parseInt(icalStr.substr(4, 2), 10) - 1;\n  var strDay = icalStr.substr(6, 2);\n  var strHour = icalStr.substr(9, 2);\n  var strMin = icalStr.substr(11, 2);\n  var strSec = icalStr.substr(13, 2);\n  var oDate = new Date(strYear, strMonth, strDay, strHour, strMin, strSec);\n  return oDate;\n}\n\nvar icstool =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(icstool, _React$Component);\n\n  function icstool(props) {\n    var _this;\n\n    _classCallCheck(this, icstool);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(icstool).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (e) {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n\n      var vm = _assertThisInitialized(_this);\n\n      reader.onload = function _callee() {\n        var lines;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                lines = this.result.split(\"\\n\");\n                _context.t0 = vm;\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(toEventArray(lines));\n\n              case 4:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  events: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      };\n\n      reader.readAsText(file);\n    });\n\n    _this.state = {\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(icstool, [{\n    key: \"render\",\n    value: function render() {\n      var eventcards = this.state.events.map(function (event) {\n        return __jsx(EventCard, {\n          event: event,\n          height: 90,\n          key: event.title\n        });\n      });\n      return __jsx(Container, {\n        maxWidth: \"xs\"\n      }, __jsx(\"input\", {\n        style: {\n          marginTop: this.state.events.length == 0 ? 360 : 60\n        },\n        type: \"file\",\n        name: \"file\",\n        onChange: this.onChangeHandler,\n        className: \"jsx-2817667622\"\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: 30,\n          marginBottom: 30,\n          color: \"white\"\n        },\n        className: \"jsx-2817667622\"\n      }, _JSON$stringify(this.state.events)), eventcards, __jsx(_JSXStyle, {\n        id: \"2817667622\"\n      }, [\"body{background:#333333;}\", \"::-webkit-scrollbar{width:5px;}\", \"::-webkit-scrollbar-track{-webkit-border-radius:10px;border-radius:10px;margin:80px 0 5px 0;}\", \"::-webkit-scrollbar-thumb{-webkit-border-radius:4px;border-radius:4px;background:rgb(80,80,80);}\"]));\n    }\n  }]);\n\n  return icstool;\n}(React.Component);\n\nexport default icstool;","map":null,"metadata":{},"sourceType":"module"}