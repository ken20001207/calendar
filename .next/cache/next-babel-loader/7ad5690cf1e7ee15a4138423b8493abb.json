{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\n\nfunction Timeline(props) {\n  function getNextEvent(events, time) {\n    return new Promise(resolve => {\n      events.map(event => {\n        if (event.startTime > time) {\n          resolve({\n            cal: null,\n            startTime: time,\n            endTime: event.startTime\n          });\n        } else {\n          resolve(event);\n        }\n      });\n    });\n  }\n\n  async function getFilledEvent() {\n    var time = 0;\n    var filledEvents = [{\n      title: \"網路班會\",\n      cal: \"待辦事項\",\n      startTime: 600,\n      endTime: 660\n    }, {\n      title: \"學習 React\",\n      cal: \"開發設計\",\n      startTime: 675,\n      endTime: 705\n    }, {\n      title: \"安裝 Ubuntu 作業系統\",\n      cal: \"開發設計\",\n      startTime: 720,\n      endTime: 750\n    }, {\n      title: \"建置桃園 V2ray 伺服器\",\n      cal: \"開發設計\",\n      startTime: 840,\n      endTime: 885\n    }, {\n      title: \"和家人吃午餐\",\n      cal: \"重要事項\",\n      startTime: 900,\n      endTime: 945\n    }, {\n      title: \"去星巴克找朋友\",\n      cal: \"提醒事項\",\n      startTime: 1020,\n      endTime: 1035\n    }, {\n      title: \"建置桃園 V2ray 伺服器\",\n      cal: \"開發設計\",\n      startTime: 1140,\n      endTime: 1200\n    }];\n\n    while (time < 1440) {\n      var nextEvent = await getNextEvent(filledEvents, time);\n      filledEvents.push(nextEvent);\n      time = nextEvent.endTime;\n    }\n\n    return filledEvents;\n  }\n\n  return getFilledEvent().map(event => __jsx(EventCard, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Timeline","props","getNextEvent","events","time","Promise","resolve","map","event","startTime","cal","endTime","getFilledEvent","filledEvents","title","nextEvent","push"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAChC,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BH,MAAAA,MAAM,CAACI,GAAP,CAAWC,KAAK,IAAI;AAChB,YAAIA,KAAK,CAACC,SAAN,GAAkBL,IAAtB,EAA4B;AACxBE,UAAAA,OAAO,CAAC;AACJI,YAAAA,GAAG,EAAE,IADD;AAEJD,YAAAA,SAAS,EAAEL,IAFP;AAGJO,YAAAA,OAAO,EAAEH,KAAK,CAACC;AAHX,WAAD,CAAP;AAKH,SAND,MAMO;AACHH,UAAAA,OAAO,CAACE,KAAD,CAAP;AACH;AACJ,OAVD;AAWH,KAZM,CAAP;AAaH;;AAED,iBAAeI,cAAf,GAAgC;AAC5B,QAAIR,IAAI,GAAG,CAAX;AACA,QAAIS,YAAY,GAAG,CACf;AACIC,MAAAA,KAAK,EAAE,MADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,GAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KADe,EAOf;AACIG,MAAAA,KAAK,EAAE,UADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,GAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KAPe,EAaf;AACIG,MAAAA,KAAK,EAAE,gBADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,GAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KAbe,EAmBf;AACIG,MAAAA,KAAK,EAAE,gBADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,GAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KAnBe,EAyBf;AACIG,MAAAA,KAAK,EAAE,QADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,GAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KAzBe,EA+Bf;AACIG,MAAAA,KAAK,EAAE,SADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,IAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KA/Be,EAqCf;AACIG,MAAAA,KAAK,EAAE,gBADX;AAEIJ,MAAAA,GAAG,EAAE,MAFT;AAGID,MAAAA,SAAS,EAAE,IAHf;AAIIE,MAAAA,OAAO,EAAE;AAJb,KArCe,CAAnB;;AA4CA,WAAOP,IAAI,GAAG,IAAd,EAAoB;AAChB,UAAIW,SAAS,GAAG,MAAMb,YAAY,CAACW,YAAD,EAAeT,IAAf,CAAlC;AACAS,MAAAA,YAAY,CAACG,IAAb,CAAkBD,SAAlB;AACAX,MAAAA,IAAI,GAAGW,SAAS,CAACJ,OAAjB;AACH;;AACD,WAAOE,YAAP;AACH;;AAED,SAAOD,cAAc,GAAGL,GAAjB,CAAqBC,KAAK,IAAI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CAAP;AACH;;AAED,eAAeR,QAAf","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\n\r\nfunction Timeline(props) {\r\n    function getNextEvent(events, time) {\r\n        return new Promise(resolve => {\r\n            events.map(event => {\r\n                if (event.startTime > time) {\r\n                    resolve({\r\n                        cal: null,\r\n                        startTime: time,\r\n                        endTime: event.startTime\r\n                    });\r\n                } else {\r\n                    resolve(event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async function getFilledEvent() {\r\n        var time = 0;\r\n        var filledEvents = [\r\n            {\r\n                title: \"網路班會\",\r\n                cal: \"待辦事項\",\r\n                startTime: 600,\r\n                endTime: 660\r\n            },\r\n            {\r\n                title: \"學習 React\",\r\n                cal: \"開發設計\",\r\n                startTime: 675,\r\n                endTime: 705\r\n            },\r\n            {\r\n                title: \"安裝 Ubuntu 作業系統\",\r\n                cal: \"開發設計\",\r\n                startTime: 720,\r\n                endTime: 750\r\n            },\r\n            {\r\n                title: \"建置桃園 V2ray 伺服器\",\r\n                cal: \"開發設計\",\r\n                startTime: 840,\r\n                endTime: 885\r\n            },\r\n            {\r\n                title: \"和家人吃午餐\",\r\n                cal: \"重要事項\",\r\n                startTime: 900,\r\n                endTime: 945\r\n            },\r\n            {\r\n                title: \"去星巴克找朋友\",\r\n                cal: \"提醒事項\",\r\n                startTime: 1020,\r\n                endTime: 1035\r\n            },\r\n            {\r\n                title: \"建置桃園 V2ray 伺服器\",\r\n                cal: \"開發設計\",\r\n                startTime: 1140,\r\n                endTime: 1200\r\n            }\r\n        ];\r\n        while (time < 1440) {\r\n            var nextEvent = await getNextEvent(filledEvents, time);\r\n            filledEvents.push(nextEvent);\r\n            time = nextEvent.endTime;\r\n        }\r\n        return filledEvents;\r\n    }\r\n\r\n    return getFilledEvent().map(event => <EventCard event={event} />);\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}