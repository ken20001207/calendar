{"ast":null,"code":"import { generateUUID } from \"./utils/methods\";\nexport class Event {\n  constructor(JSONObject, isEmpty) {\n    this.startTime = new Date(JSONObject.startTime);\n    this.endTime = new Date(JSONObject.endTime);\n    this.duration = parseInt((this.endTime - this.startTime) / 60000);\n    this.location = JSONObject.location == undefined ? undefined : JSONObject.location;\n    this.description = JSONObject.description == undefined ? undefined : JSONObject.description;\n    this.id = JSONObject.id == undefined ? generateUUID() : JSONObject.id;\n\n    if (!isEmpty) {\n      this.isEmpty = false;\n      this.title = JSONObject.title;\n      this.color = JSONObject.color;\n    } else this.isEmpty = true;\n  }\n\n  isAllDayEvent() {\n    return this.duration >= 1440;\n  }\n\n  isEmpty() {\n    return this.isEmpty;\n  }\n\n  getStartTimeSrting() {\n    return this.startTime.getHours() + \":\" + (this.startTime.getMinutes() < 10 ? \"0\" : \"\") + this.startTime.getMinutes();\n  }\n\n  getEndTimeSting() {\n    return this.endTime.getHours() + \":\" + (this.endTime.getMinutes() < 10 ? \"0\" : \"\") + this.endTime.getMinutes();\n  }\n\n  getDurationString() {\n    return this.getStartTimeSrting() + \" - \" + this.getEndTimeSting();\n  }\n\n}\nexport class Calendar {\n  constructor(JSONObject) {\n    this.title = JSONObject.title;\n    this.color = JSONObject.color;\n    this.events = JSONObject.events.map(event => {\n      return new Event(event);\n    });\n  }\n\n}\nexport class User {\n  constructor(JSONObject) {\n    this.username = JSONObject.username;\n    this.calendars = JSONObject.calendars.map(calendar => {\n      return new Calendar(calendar);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/classes.js"],"names":["generateUUID","Event","constructor","JSONObject","isEmpty","startTime","Date","endTime","duration","parseInt","location","undefined","description","id","title","color","isAllDayEvent","getStartTimeSrting","getHours","getMinutes","getEndTimeSting","getDurationString","Calendar","events","map","event","User","username","calendars","calendar"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,KAAN,CAAY;AACfC,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC7B,SAAKC,SAAL,GAAiB,IAAIC,IAAJ,CAASH,UAAU,CAACE,SAApB,CAAjB;AACA,SAAKE,OAAL,GAAe,IAAID,IAAJ,CAASH,UAAU,CAACI,OAApB,CAAf;AACA,SAAKC,QAAL,GAAgBC,QAAQ,CAAC,CAAC,KAAKF,OAAL,GAAe,KAAKF,SAArB,IAAkC,KAAnC,CAAxB;AACA,SAAKK,QAAL,GAAgBP,UAAU,CAACO,QAAX,IAAuBC,SAAvB,GAAmCA,SAAnC,GAA+CR,UAAU,CAACO,QAA1E;AACA,SAAKE,WAAL,GAAmBT,UAAU,CAACS,WAAX,IAA0BD,SAA1B,GAAsCA,SAAtC,GAAkDR,UAAU,CAACS,WAAhF;AACA,SAAKC,EAAL,GAAUV,UAAU,CAACU,EAAX,IAAiBF,SAAjB,GAA6BX,YAAY,EAAzC,GAA8CG,UAAU,CAACU,EAAnE;;AACA,QAAI,CAACT,OAAL,EAAc;AACV,WAAKA,OAAL,GAAe,KAAf;AACA,WAAKU,KAAL,GAAaX,UAAU,CAACW,KAAxB;AACA,WAAKC,KAAL,GAAaZ,UAAU,CAACY,KAAxB;AACH,KAJD,MAIO,KAAKX,OAAL,GAAe,IAAf;AACV;;AAEDY,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKR,QAAL,IAAiB,IAAxB;AACH;;AAEDJ,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKA,OAAZ;AACH;;AAEDa,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKZ,SAAL,CAAea,QAAf,KAA4B,GAA5B,IAAmC,KAAKb,SAAL,CAAec,UAAf,KAA8B,EAA9B,GAAmC,GAAnC,GAAyC,EAA5E,IAAkF,KAAKd,SAAL,CAAec,UAAf,EAAzF;AACH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKb,OAAL,CAAaW,QAAb,KAA0B,GAA1B,IAAiC,KAAKX,OAAL,CAAaY,UAAb,KAA4B,EAA5B,GAAiC,GAAjC,GAAuC,EAAxE,IAA8E,KAAKZ,OAAL,CAAaY,UAAb,EAArF;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKJ,kBAAL,KAA4B,KAA5B,GAAoC,KAAKG,eAAL,EAA3C;AACH;;AAjCc;AAoCnB,OAAO,MAAME,QAAN,CAAe;AAClBpB,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKW,KAAL,GAAaX,UAAU,CAACW,KAAxB;AACA,SAAKC,KAAL,GAAaZ,UAAU,CAACY,KAAxB;AACA,SAAKQ,MAAL,GAAcpB,UAAU,CAACoB,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IAAI;AACzC,aAAO,IAAIxB,KAAJ,CAAUwB,KAAV,CAAP;AACH,KAFa,CAAd;AAGH;;AAPiB;AAUtB,OAAO,MAAMC,IAAN,CAAW;AACdxB,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKwB,QAAL,GAAgBxB,UAAU,CAACwB,QAA3B;AACA,SAAKC,SAAL,GAAiBzB,UAAU,CAACyB,SAAX,CAAqBJ,GAArB,CAAyBK,QAAQ,IAAI;AAClD,aAAO,IAAIP,QAAJ,CAAaO,QAAb,CAAP;AACH,KAFgB,CAAjB;AAGH;;AANa","sourcesContent":["import { generateUUID } from \"./utils/methods\";\r\n\r\nexport class Event {\r\n    constructor(JSONObject, isEmpty) {\r\n        this.startTime = new Date(JSONObject.startTime);\r\n        this.endTime = new Date(JSONObject.endTime);\r\n        this.duration = parseInt((this.endTime - this.startTime) / 60000);\r\n        this.location = JSONObject.location == undefined ? undefined : JSONObject.location;\r\n        this.description = JSONObject.description == undefined ? undefined : JSONObject.description;\r\n        this.id = JSONObject.id == undefined ? generateUUID() : JSONObject.id;\r\n        if (!isEmpty) {\r\n            this.isEmpty = false;\r\n            this.title = JSONObject.title;\r\n            this.color = JSONObject.color;\r\n        } else this.isEmpty = true;\r\n    }\r\n\r\n    isAllDayEvent() {\r\n        return this.duration >= 1440;\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.isEmpty;\r\n    }\r\n\r\n    getStartTimeSrting() {\r\n        return this.startTime.getHours() + \":\" + (this.startTime.getMinutes() < 10 ? \"0\" : \"\") + this.startTime.getMinutes();\r\n    }\r\n\r\n    getEndTimeSting() {\r\n        return this.endTime.getHours() + \":\" + (this.endTime.getMinutes() < 10 ? \"0\" : \"\") + this.endTime.getMinutes();\r\n    }\r\n\r\n    getDurationString() {\r\n        return this.getStartTimeSrting() + \" - \" + this.getEndTimeSting();\r\n    }\r\n}\r\n\r\nexport class Calendar {\r\n    constructor(JSONObject) {\r\n        this.title = JSONObject.title;\r\n        this.color = JSONObject.color;\r\n        this.events = JSONObject.events.map(event => {\r\n            return new Event(event);\r\n        });\r\n    }\r\n}\r\n\r\nexport class User {\r\n    constructor(JSONObject) {\r\n        this.username = JSONObject.username;\r\n        this.calendars = JSONObject.calendars.map(calendar => {\r\n            return new Calendar(calendar);\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}