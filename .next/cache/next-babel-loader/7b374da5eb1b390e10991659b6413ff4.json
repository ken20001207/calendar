{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\imyua\\\\dev\\\\calendar\\\\comps\\\\timeline.js\";\nvar __jsx = React.createElement;\nimport EventCard from \"../comps/eventCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { Event } from \"../classes\";\n\nfunction eventsbyDate(events, date) {\n  return events.filter(function (event) {\n    if (event instanceof Event) if (event.startTime instanceof Date) {\n      return true;\n    }\n    return false;\n  });\n}\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  function Timeline(props) {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timeline).call(this, props));\n    _this.state = {\n      todayEvents: [],\n      filledEvents: []\n    };\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return fillEvents(this.state.todayEvents).map(function (event) {\n        if (event instanceof Event) if (!event.isEmpty) {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, event.startTime.getHours(), \":\", event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes())), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          })));\n        } else {\n          return __jsx(Grid, {\n            container: true,\n            spacing: 1,\n            key: event.startTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, __jsx(Grid, {\n            item: true,\n            xs: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }), __jsx(Grid, {\n            item: true,\n            xs: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, __jsx(EventCard, {\n            key: event.startTime,\n            event: event,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          })));\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      return {\n        todayEvents: nextProps.events,\n        filledEvents: fillEvents(nextProps.events)\n      };\n    }\n  }]);\n\n  return Timeline;\n}(React.Component);\n\nfunction startOfDay(date) {\n  if (!date instanceof Date) {\n    console.error(\"傳入的時間不是合法的 Date 物件。\");\n    return null;\n  }\n\n  date = new Date(date);\n  var time = new Date();\n  time.setTime(date.getTime());\n  time.setHours(0, 0, 0);\n  return time;\n}\n\nfunction endOfDay(date) {\n  if (!date instanceof Date) {\n    console.error(\"傳入的時間不是合法的 Date 物件。\");\n    return null;\n  }\n\n  date = new Date(date);\n  var time = new Date();\n  time.setTime(date.getTime());\n  time.setHours(23, 59, 59);\n  return time;\n}\n\nfunction fillEvents(events) {\n  var filled = new Array(events.length * 2 + 1);\n  var time = startOfDay(events[0].startTime);\n  events.map(function (event) {\n    filled.push(new Event({\n      startTime: time,\n      endTime: event.startTime\n    }, true));\n    filled.push(event);\n    time.setTime(event.endTime.getTime());\n  });\n  filled.push(new Event({\n    startTime: time,\n    endTime: endOfDay(events[0].startTime)\n  }, true));\n  return filled;\n}\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/imyua/dev/calendar/comps/timeline.js"],"names":["EventCard","Grid","React","Event","eventsbyDate","events","date","filter","event","startTime","Date","Timeline","props","state","todayEvents","filledEvents","fillEvents","map","isEmpty","color","fontSize","getHours","getMinutes","nextProps","Component","startOfDay","console","error","time","setTime","getTime","setHours","endOfDay","filled","Array","length","push","endTime"],"mappings":"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","sourcesContent":["import EventCard from \"../comps/eventCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { Event } from \"../classes\";\r\n\r\nfunction eventsbyDate(events, date) {\r\n    return events.filter(event => {\r\n        if (event instanceof Event)\r\n            if (event.startTime instanceof Date) {\r\n                return true;\r\n            }\r\n        return false;\r\n    });\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todayEvents: [],\r\n            filledEvents: []\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            todayEvents: nextProps.events,\r\n            filledEvents: fillEvents(nextProps.events)\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return fillEvents(this.state.todayEvents).map(event => {\r\n            if (event instanceof Event)\r\n                if (!event.isEmpty) {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}>\r\n                                <p style={{ color: \"white\", fontSize: 8 }}>\r\n                                    {event.startTime.getHours()}:\r\n                                    {event.startTime.getMinutes() < 10 ? \"0\" : \"\" + event.startTime.getMinutes()}\r\n                                </p>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Grid container spacing={1} key={event.startTime}>\r\n                            <Grid item xs={2}></Grid>\r\n                            <Grid item xs={10}>\r\n                                <EventCard key={event.startTime} event={event} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                }\r\n        });\r\n    }\r\n}\r\n\r\nfunction startOfDay(date) {\r\n    if (!date instanceof Date) {\r\n        console.error(\"傳入的時間不是合法的 Date 物件。\");\r\n        return null;\r\n    }\r\n\r\n    date = new Date(date);\r\n    var time = new Date();\r\n    time.setTime(date.getTime());\r\n    time.setHours(0, 0, 0);\r\n    return time;\r\n}\r\n\r\nfunction endOfDay(date) {\r\n    if (!date instanceof Date) {\r\n        console.error(\"傳入的時間不是合法的 Date 物件。\");\r\n        return null;\r\n    }\r\n    date = new Date(date);\r\n    var time = new Date();\r\n    time.setTime(date.getTime());\r\n    time.setHours(23, 59, 59);\r\n    return time;\r\n}\r\n\r\nfunction fillEvents(events) {\r\n    var filled = new Array(events.length * 2 + 1);\r\n    var time = startOfDay(events[0].startTime);\r\n    events.map(event => {\r\n        filled.push(new Event({ startTime: time, endTime: event.startTime }, true));\r\n        filled.push(event);\r\n        time.setTime(event.endTime.getTime());\r\n    });\r\n    filled.push(new Event({ startTime: time, endTime: endOfDay(events[0].startTime) }, true));\r\n    return filled;\r\n}\r\n\r\nexport default Timeline;\r\n"]},"metadata":{},"sourceType":"module"}